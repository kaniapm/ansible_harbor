# {{ ansible_managed }}

## Configuration file of Harbor

#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!
_version = {{ harbor_version }}
#The IP address or hostname to access admin UI and registry service.
#DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.
hostname = {{ harbor_hostname }}

#The protocol for accessing the UI and token/notification service, by default it is http.
#It can be set to https if ssl is enabled on nginx.
ui_url_protocol = {{ harbor_ui_url_protocol }}

#Maximum number of job workers in job service
max_job_workers = {{ harbor_max_job_workers }}

#Determine whether or not to generate certificate for the registry's token.
#If the value is on, the prepare script creates new root cert and private key
#for generating token to access the registry. If the value is off the default key/cert will be used.
#This flag also controls the creation of the notary signer's cert.
customize_crt = {{ harbor_customize_crt }}

#The path of cert and key files for nginx, they are applied only the protocol is set to https
ssl_cert = {{ harbor_ssl_cert }}
ssl_cert_key = {{ harbor_ssl_cert_key }}

#The path of secretkey storage
secretkey_path = {{ harbor_secretkey_path }}

#Admiral's url, comment this attribute, or set its value to NA when Harbor is standalone
admiral_url = {{ harbor_admiral_url }}

#Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.
log_rotate_count = {{ harbor_log_rotate_count }}
#Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.
#If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G
#are all valid.
log_rotate_size = {{ harbor_log_rotate_size }}

#Config http proxy for Clair, e.g. http://my.proxy.com:3128
#Clair doesn't need to connect to harbor ui container via http proxy.
http_proxy =
https_proxy =
no_proxy = 127.0.0.1,localhost,ui

#NOTES: The properties between BEGIN INITIAL PROPERTIES and END INITIAL PROPERTIES
#only take effect in the first boot, the subsequent changes of these properties
#should be performed on web ui

#************************BEGIN INITIAL PROPERTIES************************

#Email account settings for sending out password resetting emails.

#Email server uses the given username and password to authenticate on TLS connections to host and act as identity.
#Identity left blank to act as username.
email_identity = {{ harbor_email_identity }}

email_server = {{ harbor_email_server }}
email_server_port = {{ harbor_email_port }}
email_username = {{ harbor_email_username }}
email_password = {{ harbor_email_password }}
email_from = {{ harbor_email_from }}
email_ssl = {{ harbor_email_ssl }}
email_insecure = {{ harbor_email_insecure }}

##The initial password of Harbor admin, only works for the first time when Harbor starts.
#It has no effect after the first launch of Harbor.
#Change the admin password from UI after launching Harbor.
harbor_admin_password = {{ harbor_admin_password }}

##By default the auth mode is db_auth, i.e. the credentials are stored in a local database.
#Set it to ldap_auth if you want to verify a user's credentials against an LDAP server.
auth_mode = {{ harbor_auth_mode }}

#The url for an ldap endpoint.
ldap_url = {{ harbor_ldap_url }}

#A user's DN who has the permission to search the LDAP/AD server.
#If your LDAP/AD server does not support anonymous search, you should configure this DN and ldap_search_pwd.
#ldap_searchdn = uid=searchuser,ou=people,dc=mydomain,dc=com

#the password of the ldap_searchdn
#ldap_search_pwd = password

#The base DN from which to look up a user in LDAP/AD
ldap_basedn = {{ harbor_ldap_basedn }}

#Search filter for LDAP/AD, make sure the syntax of the filter is correct.
#ldap_filter = (objectClass=person)

# The attribute used in a search to match a user, it could be uid, cn, email, sAMAccountName or other attributes depending on your LDAP/AD
ldap_uid = {{ harbor_ldap_uid }}

#the scope to search for users, 0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE
ldap_scope = {{ harbor_ldap_group_scope }}

#Timeout (in seconds)  when connecting to an LDAP Server. The default value (and most reasonable) is 5 seconds.
ldap_timeout = {{ harbor_ldap_timeout }}

#Verify certificate from LDAP server
ldap_verify_cert = {{ harbor_ldap_verify_cert }}

#The base dn from which to lookup a group in LDAP/AD
ldap_group_basedn = {{ harbor_ldap_group_basedn }}

#filter to search LDAP/AD group
ldap_group_filter = {{ harbor_ldap_group_filter }}

#The attribute used to name a LDAP/AD group, it could be cn, name
ldap_group_gid = {{ harbor_ldap_group_gid }}

#The scope to search for ldap groups. 0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE
ldap_group_scope = {{ harbor_ldap_group_scope }}

#Turn on or off the self-registration feature
self_registration = {{ harbor_self_registration }}

#The expiration time (in minute) of token created by token service, default is 30 minutes
token_expiration = {{ harbor_token_expiration }}

#The flag to control what users have permission to create projects
#The default value "everyone" allows everyone to creates a project.
#Set to "adminonly" so that only admin user can create project.
project_creation_restriction = {{ harbor_project_creation_restriction }}

#************************END INITIAL PROPERTIES************************

#######Harbor DB configuration section#######

#The address of the Harbor database. Only need to change when using external db.
db_host = {{ harbor_db_host }}

#The password for the root user of Harbor DB. Change this before any production use.
db_password = {{ harbor_db_password }}

#The port of Harbor database host
db_port = {{ harbor_db_port}}

#The user name of Harbor database
db_user = {{ harbor_db_user }}

##### End of Harbor DB configuration#######

#The redis server address. Only needed in HA installation.
#address:port[,weight,password,db_index]
redis_url = {{ harbor_redis_url }}

##########Clair DB configuration############

#Clair DB host address. Only change it when using an exteral DB.
clair_db_host = {{ harbor_clair_db_host }}

#The password of the Clair's postgres database. Only effective when Harbor is deployed with Clair.
#Please update it before deployment. Subsequent update will cause Clair's API server and Harbor unable to access Clair's database.
clair_db_password = {{ harbor_clair_db_password }}

#Clair DB connect port
clair_db_port = {{ harbor_clair_db_port }}

#Clair DB username
clair_db_username = {{ harbor_clair_db_username }}

#Clair default database
clair_db = {{ harbor_clair_db }}

##########End of Clair DB configuration############

#The following attributes only need to be set when auth mode is uaa_auth
uaa_endpoint = uaa.mydomain.org
uaa_clientid = id
uaa_clientsecret = secret
uaa_verify_cert = true
uaa_ca_cert = /path/to/ca.pem


### Docker Registry setting ###
#registry_storage_provider can be: filesystem, s3, gcs, azure, etc.
registry_storage_provider_name = {{ harbor_registry_storage_provider_name }}
#registry_storage_provider_config is a comma separated "key: value" pairs, e.g. "key1: value, key2: value2".
#Refer to https://docs.docker.com/registry/configuration/#storage for all available configuration.
registry_storage_provider_config = {{ harbor_registry_storage_provider_config }}

#If reload_config=true, all settings which present in harbor.cfg take effect after prepare and restart harbor, it overwrites exsiting settings.
reload_config = {{ harbor_reload_config }}
#Regular expression to match skipped environment variables
#skip_reload_env_pattern=(^EMAIL.*)|(^LDAP.*)
